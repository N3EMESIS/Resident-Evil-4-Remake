{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas Idiart\\\\Desktop\\\\Coding\\\\Rick_And_Morty_App\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport React, { useState } from \"react\";\nimport Nav from \"./components/Nav/Nav\";\nconst URL_BASE = \"https://rickandmortyapi.com/api\";\nconst API_KEY = \"ae548ca5efd4.e18bd88c702829bbd7f8\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Definir el estado characters utilizando useState\n  const [characters, setCharacters] = useState([]);\n  function onSearch(character) {\n    const characterId = parseInt(character);\n    const isDuplicate = characters.some(char => char.id === characterId);\n    if (isDuplicate) {\n      window.alert(\"Ya has agregado este personaje\");\n      return;\n    }\n    fetch(`${URL_BASE}/character/${character}?key=${API_KEY}`).then(response => response.json()).then(data => {\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert(\"No hay personajes con ese ID\");\n      }\n    });\n  }\n  function onClose(id) {\n    setCharacters(oldChars => oldChars.filter(char => char.id !== id));\n  }\n  function handleRandom() {\n    const randomId = Math.floor(Math.random() * 826) + 1;\n    fetch(`${URL_BASE}/character/${randomId}?key=${API_KEY}`).then(response => response.json()).then(data => {\n      // Controlar que no se puedan agregar personajes repetidos\n      const isDuplicate = characters.some(char => char.id === data.id);\n      if (isDuplicate) {\n        window.alert(\"Ya has agregado este personaje\");\n        return;\n      }\n\n      // Agregar el personaje al estado de characters\n      setCharacters(oldChars => [...oldChars, data]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"25px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch,\n        handleRandom: handleRandom,\n        characters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","React","useState","Nav","URL_BASE","API_KEY","Switch","Route","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","character","characterId","parseInt","isDuplicate","some","char","id","window","alert","fetch","then","response","json","data","name","oldChars","onClose","filter","handleRandom","randomId","Math","floor","random","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","Routes","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Lucas Idiart/Desktop/Coding/Rick_And_Morty_App/src/App.js"],"sourcesContent":["import './App.css'\r\nimport Cards from './components/Cards/Cards.jsx'\r\nimport React, { useState } from \"react\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nconst URL_BASE = \"https://rickandmortyapi.com/api\";\r\nconst API_KEY = \"ae548ca5efd4.e18bd88c702829bbd7f8\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // Definir el estado characters utilizando useState\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  function onSearch(character) {\r\n    const characterId = parseInt(character);\r\n    const isDuplicate = characters.some((char) => char.id === characterId);\r\n\r\n    if (isDuplicate) {\r\n      window.alert(\"Ya has agregado este personaje\");\r\n      return;\r\n    }\r\n\r\n    fetch(`${URL_BASE}/character/${character}?key=${API_KEY}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.name) {\r\n          setCharacters((oldChars) => [...oldChars, data]);\r\n        } else {\r\n          window.alert(\"No hay personajes con ese ID\");\r\n        }\r\n      });\r\n  }\r\n\r\n  function onClose(id) {\r\n    setCharacters((oldChars) => oldChars.filter((char) => char.id !== id));\r\n  }\r\n\r\n  function handleRandom() {\r\n    const randomId = Math.floor(Math.random() * 826) + 1;\r\n\r\n    fetch(`${URL_BASE}/character/${randomId}?key=${API_KEY}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Controlar que no se puedan agregar personajes repetidos\r\n        const isDuplicate = characters.some((char) => char.id === data.id);\r\n\r\n        if (isDuplicate) {\r\n          window.alert(\"Ya has agregado este personaje\");\r\n          return;\r\n        }\r\n\r\n        // Agregar el personaje al estado de characters\r\n        setCharacters((oldChars) => [...oldChars, data]);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"25px\" }}>\r\n        <div>\r\n          <Nav onSearch={onSearch} handleRandom={handleRandom} characters={characters} />\r\n        </div>\r\n        <hr />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Cards characters={characters} onClose={onClose} />} />\r\n        </Routes>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}